/*------------------------------------*\

   	BUTTON

	Button options and styles can be changed in _config.scss
	under the *Buttons*.

	Options include:

	$button-font-family
	$has-button-border
	$has-button-gradient
	$has-button-shadow
	$is-button-rounded

	/ref/patterns.php#buttons

/*------------------------------------*/

@mixin button-base {
	@include padding(0 $base-space);
	appearance:none;
	cursor: pointer;
	display: inline-block;
	font-family: $button-font-family;
	line-height: $touch-target;
	min-height: $touch-target;
	white-space: nowrap;

	// Border Radius Settings
	@if $button-radius > 0 {
		border-radius: $button-radius;
	}
	@if $has-button-shadow {
		box-shadow: $base-shadow;
		&:active {
			box-shadow: $base-shadow-inset;
		}
	}

	// Disabled Settings
	&[disabled] {
		box-shadow: none;
		cursor:not-allowed;
		opacity:0.5;
	}
}

@mixin button-border(
	$border-width: $button-border-width,
	$border-color: darken($button-color, 5%)
) {
	border: $border-width solid;
	border-color: $border-color;
}

@mixin button-color (
$button-color:$button-color,
$border-color:darken($button-color, 5%)
) {
	background: $button-color;

// Gradient Settings
	@if $has-button-gradient {
		background-image: linear-gradient(to bottom, lighten($button-color, 5%), darken($button-color, 5%));
	}

// Border Settings
	@if $has-button-border {
		border-color: $border-color;
	}

// Text Color Settings
	$lightness: lightness($button-color);
	@if $lightness < 60 {
		color: white;
		&:visited {
			color: white;
		}
	} @else {
		color: darken($button-color, 50%);
		&:visited {
			color: darken($button-color, 50%);
		}
	}

	@if $button-color != "transparent" {
	// Hover State
		&:hover {
			background:darken($button-color, 5%);
			$lightness: lightness($button-color);
			@if $lightness < 60 {
				color: white;
			} @else {
				color: darken($button-color, 60%);
			}
		}

	// Active State
		&:active {
			background:darken($button-color, 10%);
			$lightness: lightness($button-color);
			@if $lightness < 60 {
				color: white;
			} @else {
				color: darken($button-color, 70%);
			}
		}

	// Disabled Settings
		&[disabled] {
			background:$button-color;
			&:hover, &:active {
				background:$button-color;
			}
		}
	}
}

@mixin button-text-color(
	$button-color: $button-color,
	$button-color-hover: $button-color
) {
	color:$button-color;
	&:visited {
		color:$button-color;
	}
	&:hover {
		color:$button-color-hover;
	}
}

@mixin button(
$button-color:$button-color,
$border-width:$button-border-width,
$border-color:darken($button-color, 5%)
) {
	@include button-base;
	@include button-color($button-color);

	// Border Settings
	@if $has-button-border {
		@include button-border($border-width, $border-color);
	}
	@else {
		border: 0;
	}
}

@mixin button-hollow(
$button-color:$button-color,
$border-width:$button-border-width,
$border-color:$button-color
) {
	@include button-base;
	@include button-text-color($button-color);
	@include button-border($border-width, $border-color);
	background: none;

	// If borders are off then we need to adjust the height of this button style
	@if $button-border-width == false {
		line-height: $touch-target - ( $border-width * 2 );
		min-height: $touch-target - ( $border-width * 2 );
	}

	&:hover {
		background-color: $button-color;
	}
	&:active {
		background-color: darken($button-color, 5%);
	}
	&:hover, &:active, &:focus {
		color: white;
	}
}

%button-group {
	input[type="submit"].button,
	.button {
		margin-#{$end}:-2px;
	}
	@if $button-radius > 0 {
		input[type="submit"].button,
		.button {
			border-radius: 0 0 0 0;
			&:first-child {
				border-top-#{$start}-radius: $button-radius;
				border-bottom-#{$start}-radius: $button-radius;
			}
			&:last-child {
				border-top-#{$end}-radius: $button-radius;
				border-bottom-#{$end}-radius: $button-radius;
			}
		}
	}
}
